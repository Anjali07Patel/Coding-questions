// creation of singly linked list
#include<iostream>
using namespace std;
class Node
{
    public:
    int data;
    Node* next;
    public:
    Node(int data)
    {
        this->data=data;
        this->next=NULL;
    }  
};
// insertion at beginning
void insertAtBeginning(Node* & head,int data)
{
    Node* newNode=new Node(data);
    newNode->next=head;
    head=newNode;
}

// insertion at tail
void insertAtEnd(Node* &head,int data)
{
    Node* newNode= new Node(data);
    if(head==NULL)
    {
        head=newNode;
        return;
    }
    Node* temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=newNode;
}
//display linked list
void display(Node* head)
{
    Node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

//deletion at head
void deletionAtHead(Node* & head)
{
    Node* todelete=head;
    head=head->next;
    delete todelete;
}
//deletion of any node
void deletion(Node* & head, int val)
{
    if(head==NULL)
    {
        return ;
    }
    if(head->next==NULL)
    {
        deletionAtHead(head);
        return;
    }
    Node* temp=head;
    while(temp->next->data!=val)
    {
        temp=temp->next;
    }
    Node* todelete=temp->next;
    
    temp->next=temp->next->next;
    delete todelete;
}
//search
bool search(node* &head ,int key)
{
    node* temp=head;
    while(temp!=NULL)
    {
        if(temp->data==key)
        {
            return true;
        }
            temp=temp->next;
    }
    return false;
}
int main()
{
    Node* head=NULL;
    /*insertAtBeginning(head,10);
    insertAtBeginning(head,11);
    insertAtBeginning(head,12)*/

    insertAtEnd(head,10);
    insertAtEnd(head,11);
    display(head);
   // deletion(head,11);
   deletionAtHead(head);
     display(head);
     int key;
     cin>>key;
     search(head,key)?cout<<"yes":cout<<"no";
}
