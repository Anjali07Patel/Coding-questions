//iterative way
Node* findIntersection(Node* head1, Node* head2)
    {
      Node* temp=new Node(-1);
      Node* dummy=temp;
       while(head1 && head2)
       {
           if(head1->data<head2->data)
           {
               head1=head1->next;
           }
           else if(head1->data>head2->data)
           {
               head2=head2->next;
           }
           else if(head1->data==head2->data)
           {
               Node* newNode=new Node(head1->data);
               dummy->next=newNode;
               dummy=newNode;
               head1=head1->next;
               head2=head2->next;
            //   temp=temp->next;
           }
       }
       return temp->next;
    }


// recursive way
Node* findIntersection(Node* head1, Node* head2)
    {
    
        if(head1==NULL || head2==NULL)
        {
            return NULL;
        }
        if(head1->data<head2->data)
        {
            return findIntersection(head1->next,head2);
        }
        if(head1->data>head2->data)
        {
            return findIntersection(head1,head2->next);
        }
        Node* temp=new Node(-1);
        if(head1->data==head2->data)
        {
            temp->data=head1->data;
            temp->next= findIntersection(head1->next,head2->next);
        }
        return temp;
    
    }
